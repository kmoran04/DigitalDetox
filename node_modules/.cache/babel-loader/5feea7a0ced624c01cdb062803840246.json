{"ast":null,"code":"import _slicedToArray from \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/InputBar.tsx\";\nimport React, { useState } from 'react';\nimport { InputBarStyled, InputText } from './styles';\nimport Typed from 'react-typed';\n\nconst InputBar = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        fadeText = _useState2[0],\n        setFadeText = _useState2[1];\n\n  const onKey = e => {\n    setFadeText(e.target.value);\n  };\n\n  return React.createElement(InputBarStyled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    type: \"text\",\n    placeholder: props.placeholder,\n    value: props.text,\n    onChange: props.onChange,\n    onKeyPress: props.onKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Typed, {\n    strings: [fadeText],\n    typeSpeed: 40 //backSpeed={50}\n    ,\n    fadeOut: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default InputBar;","map":{"version":3,"sources":["/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/InputBar.tsx"],"names":["React","useState","InputBarStyled","InputText","Typed","InputBar","props","fadeText","setFadeText","onKey","e","target","value","placeholder","text","onChange","onKeyPress"],"mappings":";;AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,UAA1C;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAWE,MAAMC,QAAkC,GAAIC,KAAD,IAAW;AAAA,oBACpBL,QAAQ,CAAC,EAAD,CADY;AAAA;AAAA,QAC7CM,QAD6C;AAAA,QACnCC,WADmC;;AAGpD,QAAMC,KAAK,GAAIC,CAAD,IAA4C;AACxDF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAEN,KAAK,CAACO,WAFrB;AAGE,IAAA,KAAK,EAAEP,KAAK,CAACQ,IAHf;AAIE,IAAA,QAAQ,EAAER,KAAK,CAACS,QAJlB;AAKE,IAAA,UAAU,EAAET,KAAK,CAACU,UALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASA,oBAAC,KAAD;AACI,IAAA,OAAO,EAAE,CAACT,QAAD,CADb;AAEI,IAAA,SAAS,EAAE,EAFf,CAGI;AAHJ;AAII,IAAA,OAAO,EAAE,IAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,CADF;AAkBD,CAzBD;;AA2BA,eAAeF,QAAf","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport { InputBarStyled, InputText } from './styles';\nimport Typed from 'react-typed';\n\n\ninterface IInputBarProps {\n    text: string;\n    placeholder: string;\n    onKeyPress: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  }\n\n  \n  const InputBar: React.FC<IInputBarProps> = (props) => {\n    const [fadeText, setFadeText] = useState('');\n\n    const onKey = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setFadeText(e.target.value);\n    }\n    \n    return (\n      <InputBarStyled>\n        <InputText\n          type='text'\n          placeholder={props.placeholder}\n          value={props.text}\n          onChange={props.onChange}\n          onKeyPress={props.onKeyPress}\n        />\n\n      <Typed\n          strings={[fadeText]}\n          typeSpeed={40}\n          //backSpeed={50}\n          fadeOut={true} >\n        </Typed>\n      </InputBarStyled>\n    );\n  };\n  \n  export default InputBar;"]},"metadata":{},"sourceType":"module"}