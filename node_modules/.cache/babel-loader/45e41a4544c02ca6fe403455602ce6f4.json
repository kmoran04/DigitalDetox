{"ast":null,"code":"import _slicedToArray from \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputBar from './InputBar';\nimport Typed from 'react-typed';\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputText = _useState2[0],\n        setInputText = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fadeText = _useState4[0],\n        setFadeText = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showTyped = _useState6[0],\n        setShowTyped = _useState6[1];\n\n  const send_message = () => {};\n\n  const fade = () => {};\n\n  const onKeyPress = async e => {\n    if (e.key === 'Enter') {\n      send_message();\n      setTimeout(setInputText(''), 5000);\n      setFadeText('');\n    } else if (e.key == ' ') {\n      fade(); //setFadeText('');\n      //setShowTyped(true);\n    }\n  };\n\n  const onChange = e => {\n    setInputText(e.target.value);\n    setFadeText(e.target.value); //fade();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(InputBar, {\n    text: inputText,\n    placeholder: \"type your thoughts here\",\n    onKeyPress: onKeyPress,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"and press enter to release them\"), showTyped ? React.createElement(\"div\", {\n    id: \"typed-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Typed, {\n    strings: [fadeText],\n    typeSpeed: 100 //backSpeed={50}\n    ,\n    fadeOut: true,\n    fadeOutDelay: 500,\n    loop: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \" \") : null));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/App.tsx"],"names":["React","useState","InputBar","Typed","App","inputText","setInputText","fadeText","setFadeText","showTyped","setShowTyped","send_message","fade","onKeyPress","e","key","setTimeout","onChange","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAKA,MAAMC,GAAa,GAAG,MAAM;AAAA,oBACQH,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACnBI,SADmB;AAAA,QACRC,YADQ;;AAAA,qBAEML,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEnBM,QAFmB;AAAA,QAETC,WAFS;;AAAA,qBAGQP,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,QAGnBQ,SAHmB;AAAA,QAGRC,YAHQ;;AAK1B,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM,CAElB,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAoD;AACrE,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBJ,MAAAA,YAAY;AACZK,MAAAA,UAAU,CAEVV,YAAY,CAAC,EAAD,CAFF,EAEQ,IAFR,CAAV;AAIAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AAED,KARD,MAUK,IAAIM,CAAC,CAACC,GAAF,IAAS,GAAb,EAAkB;AACrBH,MAAAA,IAAI,GADiB,CAErB;AACA;AAED;AAGF,GAnBD;;AAqBA,QAAMK,QAAQ,GAAIH,CAAD,IAA4C;AAE3DR,IAAAA,YAAY,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV,CAAZ;AACAX,IAAAA,WAAW,CAACM,CAAC,CAACI,MAAF,CAASC,KAAV,CAAX,CAH2D,CAK3D;AACD,GAND;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEd,SAAhB;AAA2B,IAAA,WAAW,EAAC,yBAAvC;AAAiE,IAAA,UAAU,EAAEQ,UAA7E;AAAyF,IAAA,QAAQ,EAAEI,QAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,EAKGR,SAAS,GACR;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE,CAACF,QAAD,CADX;AAEE,IAAA,SAAS,EAAE,GAFb,CAGE;AAHF;AAIE,IAAA,OAAO,EAAE,IAJX;AAKE,IAAA,YAAY,EAAE,GALhB;AAME,IAAA,IAAI,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,MADQ,GAUY,IAfxB,CADF,CADF;AAuBD,CAlED;;AAoEA,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport InputBar from './InputBar';\nimport Typed from 'react-typed';\n\n\n\n\nconst App: React.FC = () => {\n  const [inputText, setInputText] = useState('');\n  const [fadeText, setFadeText] = useState('');\n  const [showTyped, setShowTyped] = useState(false);\n\n  const send_message = () => {\n\n  }\n\n  const fade = () => {\n\n  }\n\n  const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      send_message();\n      setTimeout(\n      \n      setInputText(''), 5000);\n      \n      setFadeText('');\n\n    }\n\n    else if (e.key == ' ') {\n      fade();\n      //setFadeText('');\n      //setShowTyped(true);\n\n    }\n\n\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\n    setInputText(e.target.value);\n    setFadeText(e.target.value);\n\n    //fade();\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <InputBar text={inputText} placeholder=\"type your thoughts here\" onKeyPress={onKeyPress} onChange={onChange} />\n        <p>and press enter to release them</p>\n\n\n        {showTyped ? \n          <div id=\"typed-div\" >\n            <Typed\n              strings={[fadeText]}\n              typeSpeed={100}\n              //backSpeed={50}\n              fadeOut={true}\n              fadeOutDelay={500}\n              loop\n            >\n            </Typed> </div> : null }\n        \n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}