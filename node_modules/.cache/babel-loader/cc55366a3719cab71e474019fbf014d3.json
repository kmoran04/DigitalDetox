{"ast":null,"code":"import _slicedToArray from \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputBar from './InputBar';\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputText = _useState2[0],\n        setInputText = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fadeText = _useState4[0],\n        setFadeText = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showTyped = _useState6[0],\n        setShowTyped = _useState6[1];\n\n  const send_message = () => {};\n\n  const fade = () => {};\n\n  const onKeyPress = async e => {\n    if (e.key === 'Enter') {\n      send_message();\n      setInputText('');\n      setFadeText('');\n    } else if (e.key == 'Space') {\n      fade(); //setFadeText('');\n\n      setShowTyped(false);\n    }\n  };\n\n  const onChange = e => {\n    setInputText(e.target.value);\n    setFadeText(e.target.value); //fade();\n  };\n\n  {\n    /* <div id=\"typed-div\" hidden={showTyped}>\n           <Typed\n             onStart={() => {}}\n             onStop={() => {}}\n             strings={[fadeText]}\n             typeSpeed={100}\n             //backSpeed={50}\n             fadeOut={true} \n             loop\n              >\n           </Typed>\n           </div> */\n  }\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(InputBar, {\n    text: inputText,\n    placeholder: \"type your thoughts here\",\n    onKeyPress: onKeyPress,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"and press enter to release them\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/App.tsx"],"names":["React","useState","InputBar","App","inputText","setInputText","fadeText","setFadeText","showTyped","setShowTyped","send_message","fade","onKeyPress","e","key","onChange","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAMA,MAAMC,GAAa,GAAG,MAAM;AAAA,oBACQF,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACnBG,SADmB;AAAA,QACRC,YADQ;;AAAA,qBAEMJ,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEnBK,QAFmB;AAAA,QAETC,WAFS;;AAAA,qBAGQN,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,QAGnBO,SAHmB;AAAA,QAGRC,YAHQ;;AAK1B,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM,CAElB,CAFD;;AAIA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAoD;AACrE,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBJ,MAAAA,YAAY;AACZL,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAJD,MAMK,IAAIM,CAAC,CAACC,GAAF,IAAS,OAAb,EAAsB;AACzBH,MAAAA,IAAI,GADqB,CAEzB;;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAED;AAGF,GAfD;;AAiBA,QAAMM,QAAQ,GAAIF,CAAD,IAA4C;AAE3DR,IAAAA,YAAY,CAACQ,CAAC,CAACG,MAAF,CAASC,KAAV,CAAZ;AACAV,IAAAA,WAAW,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAX,CAH2D,CAK3D;AACD,GAND;;AAOF;AAAC;;;;;;;;;;;;AAWiB;AAEhB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEb,SAAhB;AAA2B,IAAA,WAAW,EAAC,yBAAvC;AAAiE,IAAA,UAAU,EAAEQ,UAA7E;AAAyF,IAAA,QAAQ,EAAEG,QAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,CADF,CADF;AAUD,CA5DD;;AA8DA,eAAeZ,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport InputBar from './InputBar';\nimport Typed from 'react-typed';\n\n\n\n\nconst App: React.FC = () => {\n  const [inputText, setInputText] = useState('');\n  const [fadeText, setFadeText] = useState('');\n  const [showTyped, setShowTyped] = useState(false);\n\n  const send_message = () => {\n\n  }\n\n  const fade = () => {\n    \n  }\n\n  const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      send_message();\n      setInputText('');\n      setFadeText('');\n    }\n\n    else if (e.key == 'Space') {\n      fade();\n      //setFadeText('');\n      setShowTyped(false);\n      \n    }\n\n\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    \n    setInputText(e.target.value);\n    setFadeText(e.target.value);\n\n    //fade();\n  }\n{/* <div id=\"typed-div\" hidden={showTyped}>\n        <Typed\n          onStart={() => {}}\n          onStop={() => {}}\n          strings={[fadeText]}\n          typeSpeed={100}\n          //backSpeed={50}\n          fadeOut={true} \n          loop\n           >\n        </Typed>\n        </div> */}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <InputBar text={inputText} placeholder=\"type your thoughts here\" onKeyPress={onKeyPress} onChange={onChange} />\n        <p>and press enter to release them</p>\n\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}