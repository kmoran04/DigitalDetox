{"ast":null,"code":"import _slicedToArray from \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/App.tsx\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport InputBar from './InputBar';\n\nconst App = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputText = _useState2[0],\n        setInputText = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showText = _useState4[0],\n        setShowText = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showInput = _useState6[0],\n        setShowInput = _useState6[1];\n\n  const send_message = () => {};\n\n  const fade = () => {//backspace?\n  };\n\n  const onKeyPress = async e => {\n    if (e.key === 'Enter') {\n      if (inputText != '') send_message();\n      setTimeout(() => {\n        setInputText('');\n      }, 500);\n      setShowText(false);\n      setTimeout(() => {\n        setShowText(true);\n      }, 1500);\n    } else if (e.key == ' ') {\n      fade();\n    }\n  };\n\n  const onChange = e => {\n    setInputText(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, showInput ? React.createElement(InputBar, {\n    text: inputText,\n    placeholder: \"type your thoughts here\",\n    onKeyPress: onKeyPress,\n    onChange: onChange,\n    showText: showText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }) : null));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/App.tsx"],"names":["React","useState","InputBar","App","inputText","setInputText","showText","setShowText","showInput","setShowInput","send_message","fade","onKeyPress","e","key","setTimeout","onChange","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAKA,MAAMC,GAAa,GAAG,MAAM;AAAA,oBACQF,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACnBG,SADmB;AAAA,QACRC,YADQ;;AAAA,qBAEMJ,QAAQ,CAAC,IAAD,CAFd;AAAA;AAAA,QAEnBK,QAFmB;AAAA,QAETC,WAFS;;AAAA,qBAGQN,QAAQ,CAAC,IAAD,CAHhB;AAAA;AAAA,QAGnBO,SAHmB;AAAA,QAGRC,YAHQ;;AAM1B,QAAMC,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM,CACjB;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAOC,CAAP,IAAoD;AACrE,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,UAAGV,SAAS,IAAI,EAAhB,EACAM,YAAY;AACZK,MAAAA,UAAU,CAAC,MACT;AAACV,QAAAA,YAAY,CAAC,EAAD,CAAZ;AAAiB,OADV,EAER,GAFQ,CAAV;AAIAE,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,MAAAA,UAAU,CAAC,MACT;AAACR,QAAAA,WAAW,CAAC,IAAD,CAAX;AAAkB,OADX,EAER,IAFQ,CAAV;AAID,KAZD,MAcK,IAAIM,CAAC,CAACC,GAAF,IAAS,GAAb,EAAkB;AACrBH,MAAAA,IAAI;AAEL;AAGF,GArBD;;AAuBA,QAAMK,QAAQ,GAAIH,CAAD,IAA4C;AAE3DR,IAAAA,YAAY,CAACQ,CAAC,CAACI,MAAF,CAASC,KAAV,CAAZ;AACD,GAHD;;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,SAAS,GAAG,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEJ,SAAhB;AAA2B,IAAA,WAAW,EAAC,yBAAvC;AAAiE,IAAA,UAAU,EAAEQ,UAA7E;AAAyF,IAAA,QAAQ,EAAEI,QAAnG;AAA6G,IAAA,QAAQ,EAAEV,QAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyI,IADrJ,CADF,CADF;AAOD,CAlDD;;AAoDA,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport InputBar from './InputBar';\nimport Typed from 'react-typed';\n\n\n\nconst App: React.FC = () => {\n  const [inputText, setInputText] = useState('');\n  const [showText, setShowText] = useState(true);\n  const [showInput, setShowInput] = useState(true);\n\n\n  const send_message = () => {\n\n  }\n\n  const fade = () => {\n    //backspace?\n  }\n\n  const onKeyPress = async (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      if(inputText != '')\n      send_message();\n      setTimeout(() =>\n        {setInputText('')}, \n        500);\n      \n      setShowText(false);\n      setTimeout(() =>\n        {setShowText(true)}, \n        1500);\n\n    }\n\n    else if (e.key == ' ') {\n      fade();\n      \n    }\n\n\n  }\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\n    setInputText(e.target.value);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {showInput ? <InputBar text={inputText} placeholder=\"type your thoughts here\" onKeyPress={onKeyPress} onChange={onChange} showText={showText}/>  : null }       \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}