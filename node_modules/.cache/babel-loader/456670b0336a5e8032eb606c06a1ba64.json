{"ast":null,"code":"var _jsxFileName = \"/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/InputBar.tsx\";\nimport React from 'react';\nimport { InputBarStyled, InputText } from './styles';\nimport Typed from 'react-typed';\n\nconst InputBar = props => {\n  return React.createElement(InputBarStyled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(InputText, {\n    type: \"text\",\n    placeholder: props.placeholder,\n    value: props.text,\n    onChange: props.onChange,\n    onKeyPress: props.onKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Typed, {\n    strings: [props.text],\n    typeSpeed: 100 //backSpeed={50}\n    ,\n    fadeOut: true,\n    loopCount: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default InputBar;","map":{"version":3,"sources":["/Users/kristenmoran/Desktop/bostonhacks/hello-tsx/src/InputBar.tsx"],"names":["React","InputBarStyled","InputText","Typed","InputBar","props","placeholder","text","onChange","onKeyPress"],"mappings":";AAAA,OAAOA,KAAP,MAA6C,OAA7C;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,UAA1C;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAWE,MAAMC,QAAkC,GAAIC,KAAD,IAAW;AAIpD,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAEA,KAAK,CAACC,WAFrB;AAGE,IAAA,KAAK,EAAED,KAAK,CAACE,IAHf;AAIE,IAAA,QAAQ,EAAEF,KAAK,CAACG,QAJlB;AAKE,IAAA,UAAU,EAAEH,KAAK,CAACI,UALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASN,oBAAC,KAAD;AACU,IAAA,OAAO,EAAE,CAACJ,KAAK,CAACE,IAAP,CADnB;AAEU,IAAA,SAAS,EAAE,GAFrB,CAGU;AAHV;AAIU,IAAA,OAAO,EAAE,IAJnB;AAKU,IAAA,SAAS,EAAE,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATM,CADF;AAqBD,CAzBD;;AA2BA,eAAeH,QAAf","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport { InputBarStyled, InputText } from './styles';\nimport Typed from 'react-typed';\n\n\ninterface IInputBarProps {\n    text: string;\n    placeholder: string;\n    onKeyPress: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  }\n\n  \n  const InputBar: React.FC<IInputBarProps> = (props) => {\n\n\n    \n    return (\n      <InputBarStyled>\n        <InputText\n          type='text'\n          placeholder={props.placeholder}\n          value={props.text}\n          onChange={props.onChange}\n          onKeyPress={props.onKeyPress}\n        />\n\n<Typed\n          strings={[props.text]}\n          typeSpeed={100}\n          //backSpeed={50}\n          fadeOut={true} \n          loopCount={1} >\n          \n        </Typed>\n\n      </InputBarStyled>\n    );\n  };\n  \n  export default InputBar;"]},"metadata":{},"sourceType":"module"}